#!/bin/bash

# Set HOSTNAME to the first argument if provided, otherwise default to localhost
HOSTNAME=${1:-localhost}

source .env

echo "Checking the internal ports are open."
lsof -i -P -n | grep LISTEN
echo "The server is located at $HOSTNAME"
echo "Checking the response from the django server."
response=$(curl -G http://$HOSTNAME/api/health-check/)
if echo "$response" | jq -e '.healthy == true' > /dev/null; then
    echo "django server is ok"  
else
    echo "django server failed"
    exit 1
fi


echo "acoustic-calcs username: $CALC_USER"
echo "acoustic-calcs password: $CALC_PASS"
echo "acoustic-calcs email   : $CALC_EMAIL"

# echo "Creating a new user"
# curl -X 'POST' \
#  'http://'$HOSTNAME'/api/user/create/' \
#  -H 'accept: application/json' \
#  -H 'Content-Type: multipart/form-data' \
#  -F 'email='$CALC_EMAIL \
#  -F 'password='$CALC_PASS \
#  -F 'name='$CALC_USER

token_response=$(curl -X 'POST' \
  'http://'$HOSTNAME'/api/user/token/' \
  -H 'accept: application/json' \
  -H 'Content-Type: application/json' \
  -d '{
  "email": "'$CALC_EMAIL'",
  "password": "'$CALC_PASS'"
}')

#echo "Token response: $token_response"

# Extract the token value from the response
access_token=$(echo "$token_response" | jq -r '.access')

# Check if the token was successfully extracted
if [ "$access_token" != "null" ]; then
    echo "Token request successful. Token: $access_token"
else
    echo "Token request failed"
    exit 1
fi

echo "Testing an authenticated request, user details"
user_details=$(curl -X 'GET' \
  'http://'$HOSTNAME'/api/user/me/' \
  -H "Authorization: Bearer $access_token" \
  -H 'accept: application/json')
echo "User details: $user_details"

# Read the JSON payload from the file
input_model=$(cat acoustic/composite/tests/modelPayload.json)

# Prepare the JSON payload
payload=$(jq -n --argjson data "$input_model" '{data: $data}')

# Perform a POST request with the access token and JSON payload
sim_result=$(curl -s -X POST \
    'http://'$HOSTNAME'/api/composite/' \
    -H "Authorization: Bearer $access_token" \
    -H 'accept: application/json' \
    -H 'Content-Type: application/json' \
    -d "$payload")

# echo "Simulation result: $sim_result"
input_results=$(cat acoustic/composite/tests/resultsPayload.json)

python acoustic/composite/utils/compare_json.py "$input_results" "$sim_result" --tolerance 1e-9

