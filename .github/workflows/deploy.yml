name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/acoustic-calc:latest

  test-lint:
    name: Test and Lint
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Checkout
        uses: actions/checkout@v2

      - name: Lint
        run: docker run --rm ${{ secrets.DOCKER_USERNAME }}/acoustic-calc:latest sh -c "flake8"

      - name: Test
        run: docker run -e DB_HOST=${{ secrets.DB_HOST }} -e DB_NAME=${{ secrets.DB_NAME }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASS=${{ secrets.DB_PASS }} -e DB_PORT=${{ secrets.DB_PORT }} -e DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }} --rm ${{ secrets.DOCKER_USERNAME }}/acoustic-calc:latest sh -c "python manage.py wait_for_db && python manage.py test"



  deploy:
    runs-on: ubuntu-latest
    needs: test-lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Copy SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Add SSH key to the agent
        run: |
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no admin@ec2-3-27-46-83.ap-southeast-2.compute.amazonaws.com << 'EOF'
            docker pull your-dockerhub-username/acoustic:latest
            docker stop acoustic || true
            docker rm acoustic || true
            docker run -d -p 80:80 -e DB_HOST=${{ secrets.DB_HOST }} -e DB_NAME=${{ secrets.DB_NAME }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASS=${{ secrets.DB_PASS }} -e DB_PORT=${{ secrets.DB_PORT }} -e DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} -e DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }} -e DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }} --rm ${{ secrets.DOCKER_USERNAME }}/acoustic-calc:latest sh -c "python manage.py wait_for_db && python manage.py test"
          EOF